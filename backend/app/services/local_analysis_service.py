from typing import Dict, Any

class LocalAnalysisService:
    def __init__(self):
        pass

    async def analyze_hand_locally(self, hand_data: Dict[str, Any]) -> str:
        """An√°lise local mais detalhada."""

        hero_position = hand_data.get("hero_position", "Desconhecida")
        hero_cards = hand_data.get("hero_cards", "N√£o identificadas")
        hero_action = hand_data.get("hero_action", "N√£o identificada")
        hero_stack = hand_data.get("hero_stack")
        pot_size = hand_data.get("pot_size")

        # Regra simplificada para stack
        stack_comment = ""
        if hero_stack is not None:
            if hero_stack < 10:
                stack_comment = "Stack curto: situa√ß√£o de push/fold."
            elif hero_stack < 30:
                stack_comment = "Stack m√©dio: √© poss√≠vel abrir mais m√£os, mas cuidado com all-ins."
            else:
                stack_comment = "Stack confort√°vel: margem para jogadas p√≥s-flop."

        # Verifica coer√™ncia posi√ß√£o x a√ß√£o
        position_action_comment = ""
        if hero_position.lower() in ["early", "utg", "utg+1"]:
            if hero_action.lower() in ["call", "limp"]:
                position_action_comment = "Jogada passiva em posi√ß√£o inicial pode ser ruim. Prefira abrir raise ou fold."
            elif hero_action.lower() in ["raise"]:
                position_action_comment = "A√ß√£o agressiva em posi√ß√£o inicial √© ok, desde que o range seja tight."
        elif hero_position.lower() in ["late", "button", "cutoff"]:
            if hero_action.lower() in ["raise"]:
                position_action_comment = "Boa agressividade em posi√ß√£o final."
            elif hero_action.lower() in ["call"]:
                position_action_comment = "Call em posi√ß√£o final √© aceit√°vel, mas avalie odds e agressividade."

        # Avalia for√ßa pr√©-flop se poss√≠vel (super simplificado)
        hand_strength_comment = ""
        if hero_cards != "N√£o identificadas":
            strong_hands = ["AA", "KK", "QQ", "AK", "JJ", "AQ"]
            if any(strong in hero_cards.replace(" ", "") for strong in strong_hands):
                hand_strength_comment = "M√£o forte pr√©-flop."
            else:
                hand_strength_comment = "M√£o de for√ßa m√©dia/baixa ‚Äî jogue com cautela."

        # Diagn√≥stico final (exemplo simples)
        decision_ok = "Inconclusivo"
        explanation = ""

        if "M√£o forte" in hand_strength_comment and "raise" in hero_action.lower():
            decision_ok = "Decis√£o correta"
            explanation = "A√ß√£o agressiva com m√£o forte est√° de acordo com estrat√©gia."
        elif "M√£o de for√ßa m√©dia" in hand_strength_comment and hero_action.lower() == "call":
            decision_ok = "Aceit√°vel"
            explanation = "Call com m√£o m√©dia pode ser ok, mas depende de posi√ß√£o e tamanho de stack."
        elif "Jogada passiva" in position_action_comment:
            decision_ok = "Question√°vel"
            explanation = "Jogada passiva fora de posi√ß√£o com m√£o m√©dia geralmente n√£o √© lucrativa."

        analysis_text = f"""
AN√ÅLISE LOCAL DETALHADA

Posi√ß√£o do Her√≥i: {hero_position}
Cartas do Her√≥i: {hero_cards}
A√ß√£o do Her√≥i: {hero_action}
Stack do Her√≥i: {hero_stack}
Tamanho do Pote: {pot_size}

üëâ STACK: {stack_comment}
üëâ POSI√á√ÉO vs A√á√ÉO: {position_action_comment}
üëâ FOR√áA DA M√ÉO: {hand_strength_comment}

üìå DIAGN√ìSTICO: {decision_ok}
üí° EXPLICA√á√ÉO: {explanation}

RECOMENDA√á√ÉO GERAL:
- Avalie o range da m√£o para sua posi√ß√£o.
- Prefira agressividade em posi√ß√µes finais.
- Evite jogadas marginais em posi√ß√µes iniciais.
"""

        return analysis_text