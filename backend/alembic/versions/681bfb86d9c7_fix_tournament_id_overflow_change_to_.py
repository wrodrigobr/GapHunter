"""Fix tournament_id overflow - change to string

Revision ID: 681bfb86d9c7
Revises: e45070264a10
Create Date: 2025-07-28 21:40:00.546127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '681bfb86d9c7'
down_revision: Union[str, None] = 'e45070264a10'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Para SQL Server: alterar tournament_id de int para varchar(50)
    try:
        # Primeiro, remover foreign key constraint se existir
        op.drop_constraint('FK__hands__tournament__id', 'hands', type_='foreignkey')
    except:
        pass  # Constraint pode nÃ£o existir
    
    try:
        # Alterar tipo da coluna
        op.alter_column('hands', 'tournament_id',
                       existing_type=sa.Integer(),
                       type_=sa.String(50),
                       nullable=True)
    except Exception as e:
        print(f"Erro ao alterar coluna: {e}")
        # Fallback: recriar coluna
        try:
            op.drop_column('hands', 'tournament_id')
            op.add_column('hands', sa.Column('tournament_id', sa.String(50), nullable=True))
        except Exception as e2:
            print(f"Erro no fallback: {e2}")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Reverter para int (pode causar perda de dados)
    try:
        op.alter_column('hands', 'tournament_id',
                       existing_type=sa.String(50),
                       type_=sa.Integer(),
                       nullable=True)
    except:
        pass
    
    # ### end Alembic commands ###
